env:
  global:
   - secure: "nDBuoowqSmcjCOsK4uXfkRRGuvcLt434lXeZIND/bfOEDgOv7h62w5h4i3ebSgItWkBStLzGB8Owfb2v/S0jC+wSIoP+SD2wRg12LA0/eeb3OBYw/TR5FlCVx21/GzvODTNi8NdWb92AcYGhbLNPqMDIFHGscARjHiP2EnONhTs="

addons:
  coverity_scan:
    project:
      name: "Stellarium/stellarium"
      description: "A realistic, real-time 3D simulation of the night sky."
    notification_email: mcardinot@gmail.com
    build_command_prepend: cmake -DENABLE_TESTING=1 ..
    build_command: make -j 2
    branch_pattern: coverity_scan

language: cpp

matrix:
  include:
    - os: linux
      dist: trusty
      sudo: required
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-4.8
      env:
         - MATRIX_EVAL="CC=gcc-4.8 && CXX=g++-4.8"

    - os: linux
      dist: trusty
      sudo: required
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-4.9
      env:
         - MATRIX_EVAL="CC=gcc-4.9 && CXX=g++-4.9"

    - os: linux
      dist: trusty
      sudo: required
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
      env:
         - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"

    - os: linux
      dist: trusty
      sudo: required
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
      env:
        - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"

    - os: linux
      dist: trusty
      sudo: required
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"

    - os: linux
      dist: trusty
      sudo: required
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.6
          packages:
            - clang-3.6
      env:
        - MATRIX_EVAL="CC=clang-3.6 && CXX=clang++-3.6"

    - os: linux
      dist: trusty
      sudo: required
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.7
          packages:
            - clang-3.7
      env:
        - MATRIX_EVAL="CC=clang-3.7 && CXX=clang++-3.7"

    - os: linux
      dist: trusty
      sudo: required
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.8
          packages:
            - clang-3.8
      env:
        - MATRIX_EVAL="CC=clang-3.8 && CXX=clang++-3.8"

    - os: linux
      dist: trusty
      sudo: required
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-3.9
          packages:
            - clang-3.9
      env:
        - MATRIX_EVAL="CC=clang-3.9 && CXX=clang++-3.9"

    - os: linux
      dist: trusty
      sudo: required
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-4.0
          packages:
            - clang-4.0
      env:
        - MATRIX_EVAL="CC=clang-4.0 && CXX=clang++-4.0"

    - os: linux
      dist: trusty
      sudo: required
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-5.0
          packages:
            - clang-5.0
      env:
        - MATRIX_EVAL="CC=clang-5.0 && CXX=clang++-5.0"

    - os: osx
      osx_image: xcode7.3
      env:
        - MATRIX_EVAL="CC=clang && CXX=clang++"

    - os: osx
      osx_image: xcode8
      env:
        - MATRIX_EVAL="CC=clang && CXX=clang++"

    - os: osx
      osx_image: xcode8.3
      env:
        - MATRIX_EVAL="CC=clang && CXX=clang++"

    - os: osx
      osx_image: xcode9.2
      env:
        - MATRIX_EVAL="CC=clang && CXX=clang++"

before_install:
  - eval "${MATRIX_EVAL}"
  # Linux
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      sudo add-apt-repository ppa:beineri/opt-qt563-trusty -y
      sudo apt-get -qq update
      sudo apt-get -qq install ninja-build qt56-meta-full;
      export PATH="/opt/qt56/bin:$PATH";
      qt56-env.sh;
    fi
  # Mac OS X
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      brew update > /dev/null;
      brew install qt;
      export PATH="/usr/local/opt/qt/bin:$PATH";
    fi

install:

before_script:
  - export DISPLAY=:99.0
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sh -e /etc/init.d/xvfb start ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then ( sudo Xvfb :99 -ac -screen 0 1024x768x8; echo ok )& fi
  - sleep 3 # give xvfb some time to start
  - mkdir build
  - cd build

script:
  # Linux
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      cmake -DENABLE_TESTING=1 .. -G "Ninja";
      ninja all;
      sudo ninja install;
    fi
  # Mac OS X
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      cmake -DENABLE_TESTING=1 ..;
      make;
    fi
  - ctest --output-on-failure

after_success:
  - if [[ "$TRAVIS_OS_NAME" == "linux" && "$TRAVIS_BRANCH" == "master" ]]; then
      pip install transifex-client;
      sudo echo $'[https://www.transifex.com]\nhostname = https://www.transifex.com\nusername = '"$TRANSIFEX_USER"$'\npassword = '"$TRANSIFEX_PASSWORD"$'\ntoken = '"$TRANSIFEX_API_TOKEN"$'\n' > ~/.transifexrc;
      tx push -s;
    fi

notifications:
  recipients:
    - mcardinot@gmail.com
    - alex.v.wolf@gmail.com
  email:
    on_success: change
    on_failure: always
  irc:
    channels:
      - "irc.freenode.net#stellarium"
    template:
      - "Stellarium/master #%{build_number} (%{author}): %{message}"
      - "Change view : %{compare_url}"
      - "Build details : %{build_url}"
